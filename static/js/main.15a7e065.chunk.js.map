{"version":3,"sources":["screens/HomeScreen/HomeScreen.module.css","data/categoryData.js","components/ErrorMessage.jsx","screens/HomeScreen/HomeScreen.jsx","components/Cpinner.jsx","screens/Question/Question.jsx","screens/QuestScreen/QuestScreen.jsx","screens/Result/Result.jsx","App.jsx","config.js","reportWebVitals.js","index.js"],"names":["module","exports","categoryData","difficultyData","typeData","ErrorMessage","children","style","width","padding","marginBottom","borderRadius","backgroundColor","textAlign","color","textTransform","HomeScreen","fetchQuestions","React","useState","countQues","setCountQues","selectItem","setSelectItem","difficulty","setDifficulty","typeB","setTypeData","indexCategory","setIndexCategory","errorMessage","setErrorMessage","history","useHistory","handelSetCategory","x","ind","className","s","wrapper","inputData","type","value","onChange","e","target","required","underline","map","index","onTouchStart","onClick","display","goTest","push","Cpinner","height","role","Question","currentQuestion","setCurrentQuestion","question","options","score","correct","setScore","setQuestion","selected","setSelected","difficultyQue","setDifficultyQue","trueFalse","setTrueFalse","handleSelect","q","justifyContent","replace","console","log","handleCheck","disabled","length","queD","i","element","localStorage","setItem","JSON","stringify","QuestScreen","setOptions","useEffect","handleRandomPosition","correct_answer","incorrect_answers","optionss","sort","Math","random","category","margin","marginTop","Result","resultData","getItem","parse","d","split","App","errr","setErrr","a","axios","get","data","results","response_code","basename","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15a7e065.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"HomeScreen_wrapper__1SpFp\",\"inputData\":\"HomeScreen_inputData__3WVAQ\",\"underline\":\"HomeScreen_underline__3qSaB\",\"goTest\":\"HomeScreen_goTest__2tlcp\"};","export const categoryData = [\r\n    'Любая категория',\r\n    'General knowledge',\r\n    'Books',\r\n    'Film',\r\n    'Musik',\r\n    'Musicals & Theatres',\r\n    'Television',\r\n    'Video Games',\r\n    'Board Games',\r\n    'Science & Nature',\r\n    'Science: Computers',\r\n    'Science: Mathematics',\r\n    'Mythology',\r\n    'Sports',\r\n    'Geography',\r\n    'History',\r\n    'Politocs',\r\n    'Art',\r\n    'Celebrities',\r\n    'Animals',\r\n    'Vehicles',\r\n    'Comics',\r\n    'Gadgets',\r\n    'Japanese Anime & Manga',\r\n    'Cartoon & Animations',\r\n]\r\nexport const  difficultyData = [\r\n    'Любая сложность',\r\n    'easy',\r\n    'medium',\r\n    'hard',\r\n]\r\n\r\nexport const  typeData = [\r\n    'Любой тип',\r\n    'multiple',\r\n    'true/false',\r\n]","import React from 'react'\r\n\r\nconst ErrorMessage = ({children}) => {\r\n    return (\r\n        <div style={{\r\n            width: \"100%\",\r\n            padding:10,\r\n            marginBottom:10,\r\n            borderRadius:4,\r\n            backgroundColor:'orangered',\r\n            textAlign:\"center\",\r\n            color:'white',\r\n            textTransform:\"capitalize\"\r\n        }}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import React from \"react\";\r\nimport {\r\n  categoryData,\r\n  difficultyData,\r\n  typeData,\r\n} from \"../../data/categoryData\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport s from \"./HomeScreen.module.css\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\n\r\n\r\nconst HomeScreen = ({fetchQuestions}) => {\r\n  const [countQues, setCountQues] = React.useState()\r\n  const [selectItem, setSelectItem] = React.useState(categoryData[0]);\r\n  const [difficulty, setDifficulty] = React.useState(difficultyData[0]);\r\n  const [typeB, setTypeData] = React.useState(typeData[0]);\r\n  const [indexCategory, setIndexCategory] = React.useState(9);\r\n  const [errorMessage, setErrorMessage] = React.useState('')\r\n  const history = useHistory()\r\n\r\n  const handelSetCategory = (x, ind) => {\r\n    setSelectItem(x);\r\n    setIndexCategory(ind);\r\n  };\r\n\r\n  const getDataQuestions= ()=>{\r\n        if(!countQues || countQues === 0 || countQues === ''){\r\n            setErrorMessage('Введите Количество вопросов')  \r\n            return;   \r\n        }else {\r\n          if(countQues > 50){\r\n            setErrorMessage('Количество вопросов не может быть больше 50')\r\n          }else{\r\n            setErrorMessage(false)\r\n            fetchQuestions(countQues,indexCategory,difficulty, typeB)\r\n            history.push('/test')\r\n          }\r\n        }\r\n        \r\n    \r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    \r\n    <form className={s.wrapper}>\r\n    {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n      <div className={s.inputData}>\r\n        <input type=\"number\" value={countQues} onChange={(e) => setCountQues(e.target.value)} required />\r\n        <div className={s.underline}></div>\r\n        <label>Количество вопросов</label>\r\n      </div>\r\n\r\n      <div className=\"dropdown\">\r\n        <h6>Выберите категорию</h6>\r\n        <div className=\"dropdownSelect\">\r\n          <span className=\"select\">{selectItem}</span>\r\n          <div className=\"dropdown-list\">\r\n            {categoryData.map((x, index) => (\r\n              <option\r\n                onTouchStart={() => {handelSetCategory(x, index + 8)}}\r\n                onClick={() => handelSetCategory(x, index + 8)}\r\n                className=\"dropdown-list__item\"\r\n                key={x}\r\n                value={index}\r\n              >\r\n                {x}\r\n              </option>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"dropdown\">\r\n        <h6>Выберите сложность</h6>\r\n        <div className=\"dropdownSelect\">\r\n          <span className=\"select\">{difficulty}</span>\r\n          <div className=\"dropdown-list\">\r\n            {difficultyData.map((x) => (\r\n              <option\r\n                onTouchStart={() => setDifficulty(x)}\r\n                onClick={() => setDifficulty(x)}\r\n                className=\"dropdown-list__item\"\r\n                key={x}\r\n                value={x}\r\n              >\r\n                {x}\r\n              </option>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"dropdown\">\r\n        <h6>Выберите тип</h6>\r\n        <div className=\"dropdownSelect\">\r\n          <span className=\"select\">{typeB}</span>\r\n          <div className=\"dropdown-list\">\r\n            {typeData.map((x) => (\r\n              <option\r\n                onTouchStart={() => setTypeData(x)}\r\n                onClick={() => setTypeData(x)}\r\n                className=\"dropdown-list__item\"\r\n                key={x}\r\n                value={x}\r\n              >\r\n                {x}\r\n              </option>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>       \r\n    </form>\r\n    <a style={{display:'flex'}} className={s.goTest} onClick={getDataQuestions} >\r\n              Начать\r\n    </a>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React from 'react'\r\n\r\nconst Cpinner = () => {\r\n    return (\r\n       <div className='circle-position'>\r\n<div className=\"spinner-border\" style={{width: '3rem', height: '3rem'}} role=\"status\">\r\n  <span className=\"sr-only\">Loading...</span>\r\n</div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Cpinner\r\n","import React from 'react'\r\nimport  './Question.css'\r\nimport s from \"./../HomeScreen/HomeScreen.module.css\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst Question = ({\r\n    currentQuestion,\r\n    setCurrentQuestion,\r\n    question,\r\n    options,\r\n    score,\r\n    correct,\r\n    setScore,\r\n    setQuestion\r\n}) => {\r\n\r\n\r\n\r\n    const [selected, setSelected] = React.useState()\r\n    const [errorMessage, setErrorMessage] = React.useState('')\r\n    const [difficultyQue, setDifficultyQue] = React.useState([])\r\n    const [trueFalse, setTrueFalse] = React.useState([])\r\n    const history = useHistory()\r\n    const handleSelect = (q) => {\r\n        if(selected === q && selected === correct){\r\n            return 'selectt';\r\n        }else if (selected === q && selected !== correct){\r\n            return 'wrong'\r\n        }else if ( q === correct){\r\n            return 'selectt'\r\n        }\r\n        \r\n    }\r\n    \r\n    const handleCheck =(q) =>{\r\n        setSelected(q)\r\n        if(q === correct){\r\n            setScore(score + 1)\r\n            trueFalse.push(1)\r\n            difficultyQue.push(question[currentQuestion].difficulty)\r\n        }else{\r\n            difficultyQue.push(question[currentQuestion].difficulty)\r\n            trueFalse.push(0)\r\n        }\r\n          \r\n        \r\n        console.log(trueFalse);\r\n        console.log(difficultyQue);\r\n        setErrorMessage(false)\r\n    }\r\n\r\n    const handleNext = () =>{\r\n        if(currentQuestion + 1 >= question.length){\r\n            const queD = []\r\n            var i = 0\r\n            for(let element = 0; element < difficultyQue.length; ){\r\n                queD.push(`${difficultyQue[element]}:${trueFalse[i]}`)\r\n                element+=1\r\n                i+=1\r\n            }\r\n            localStorage.setItem('queD', JSON.stringify(queD))\r\n            history.push('/result')\r\n        }else {\r\n            if (selected){\r\n            setCurrentQuestion(currentQuestion + 1)\r\n            setSelected()\r\n                }\r\n                else\r\n                {\r\n            setErrorMessage('Пожалуйста выберите ответ')\r\n        }}\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleQuit = () =>{\r\n        history.push('/')\r\n        setQuestion()\r\n        setDifficultyQue([])\r\n        setTrueFalse([])\r\n        setScore(0)\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n           <h4 style={{display:'flex', justifyContent:'center'}}>Вопрос {currentQuestion + 1}</h4>\r\n        \r\n        <div className='singleQue'>\r\n            <h6>{(question[currentQuestion].question)\r\n            .replace(/&quot;/g, '\"')\r\n            .replace(/&#039;/g,\"'\")\r\n            .replace(/\\&shy;/gi, \"\")\r\n            .replace(/(&ldquo;)/g, '\"')\r\n            .replace(/(&rdquo;)/g, '\"')}</h6>\r\n            <div className='options'>\r\n            {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n            \r\n            \r\n            {\r\n            options &&\r\n            options.map(q => (\r\n                <button onClick={() => handleCheck(q)} \r\n                className={`singleOption ${selected && handleSelect(q)}`}\r\n                key={q}\r\n                disabled={selected}\r\n                >\r\n                    {(q).replace(/&quot;/g, '\"').replace(/&#039;/g,\"'\")}\r\n                </button>\r\n            ))}\r\n            </div>\r\n        </div>\r\n        <div className='controls'>\r\n                <button onClick={handleQuit} className={s.goTest}>Выйти</button>\r\n                <button onClick={handleNext} className={s.goTest}>Следующий вопрос</button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question\r\n","import React from \"react\";\r\nimport s from \"../HomeScreen/HomeScreen.module.css\";\r\nimport Cpinner from \"../../components/Cpinner\";\r\nimport './Quiz.css'\r\nimport Question from '../Question/Question'\r\nimport { useHistory } from \"react-router-dom\";\r\nconst QuestScreen = ({ question, score, setScore, setQuestion }) => {\r\n  const [options, setOptions] = React.useState();\r\n  const [currentQuestion, setCurrentQuestion] = React.useState(0);\r\n  const history = useHistory()\r\n\r\n  React.useEffect(() => {\r\n    if(question){\r\n      setOptions(\r\n          handleRandomPosition([\r\n            question[currentQuestion]?.correct_answer,\r\n            ...question[currentQuestion]?.incorrect_answers,\r\n          ])\r\n      );\r\n    }\r\n  }, [question, currentQuestion, history])\r\n\r\n  const handleRandomPosition = (optionss) => {\r\n    return optionss.sort(() => Math.random() - 0.5);\r\n  };\r\n\r\n  const handleGomePage =()=>{\r\n    history.push('/')\r\n    setScore(0)\r\n    setQuestion()\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className={s.wrapper}>\r\n      {question ? \r\n      (<>\r\n      {!question[currentQuestion] ? history.push('/') : (\r\n          <>\r\n      <div className='quizInfo'>\r\n        <span>{question[currentQuestion].category}</span>\r\n        <span>Score : {score}</span>\r\n      </div>\r\n      <Question\r\n      currentQuestion={currentQuestion}\r\n      setCurrentQuestion={setCurrentQuestion}\r\n      question={question}\r\n      options={options}\r\n      score={score}\r\n      correct={question[currentQuestion]?.correct_answer}\r\n      setScore={setScore}\r\n      setQuestion={setQuestion}\r\n      />\r\n      </>\r\n      )}\r\n      </>) :(\r\n        <>\r\n      <Cpinner/>\r\n      <button onClick={handleGomePage} style={{display:'flex',margin:'auto', marginTop:'20px'}} className={s.goTest}>Выйти</button>\r\n      </>\r\n      )}\r\n      </div>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default QuestScreen;\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport s from \"../HomeScreen/HomeScreen.module.css\";\r\n\r\n\r\n\r\n\r\n\r\nconst Result = ({score, question, setScore, setQuestion}) => {\r\n    const [endArray, setEndArray] = React.useState([])\r\n    const history = useHistory()\r\n\r\n    const resultData = localStorage.getItem('queD') ? JSON.parse(localStorage.getItem('queD')) : null\r\n   \r\n\r\n     const handleGomePage =()=>{\r\n        history.push('/')\r\n        setScore(0)\r\n        setQuestion()\r\n}\r\n\r\nif(!question){\r\n    history.push('/')\r\n}\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            {question && (\r\n                <>\r\n            <h4 className='title'>Финальный результат: {score > question.length/1.5 ? `${score} :)` : `${score} :(` }</h4>\r\n            <button onClick={handleGomePage} style={{display:'flex',margin:'auto', marginTop:'20px'}} className={s.goTest}>\r\n                    Вернуться на главную\r\n        </button>\r\n        {resultData.length && (\r\n            <div className='tableDiv'>\r\n            <table>\r\n               <tr>\r\n               <th>№ |</th>\r\n                   <th className='th-2' >Сложность     |</th>\r\n                   <th className='th-1'>Верно/Неверно</th>\r\n                   \r\n               </tr>\r\n               {resultData.map((d, index) =>(\r\n                                   <tr key={index} className='str'>\r\n                                            <td>{index+1}</td>\r\n                                            <td>{(d).split(':')[0]}</td>\r\n                                            <td>{(d).split(':')[1]}</td>\r\n                                            \r\n                                   </tr>\r\n               ))}\r\n\r\n            </table>\r\n            </div>\r\n        )} \r\n      \r\n       \r\n      \r\n            </>\r\n            )}\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Result\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport './App.css';\nimport HomeScreen from \"./screens/HomeScreen/HomeScreen\";\nimport QuestScreen from './screens/QuestScreen/QuestScreen'\nimport Result from './screens/Result/Result'\nimport axios from 'axios'\nimport {API_URL} from './config'\n\n\nfunction App() {\nconst [question, setQuestion] = React.useState()\nconst [score, setScore] = React.useState(0)\nconst [errr, setErrr] = React.useState('')\nconst history = useHistory()\n  const fetchQuestions = async(countQues,indexCategory,difficulty, typeB) =>{\n    try {\n      const {data} = await axios.get(`${API_URL}?${'amount=' + countQues}&${indexCategory === 8 ? '' : 'category=' + indexCategory}&\n      ${difficulty === 'Любая сложность' ? '' : 'difficulty=' + difficulty}&${typeB === 'Любой тип' ? '' : 'type=' + (typeB === 'true/false' ? 'boolean': typeB)}`)\n      if(data.results !== []){\n        setQuestion(data.results)\n      }\n    \n      console.log(data.results);\n      setErrr('')\n      console.log(data.response_code);\n    } catch (error) {\n      setErrr('Ошибка запроса')\n      console.log(errr);\n    }\n\n  }\n\n  \n\n\n  return (\n\n\n    <>\n    <BrowserRouter basename='/QUIZ'>\n    <main className=\"container content\">\n      <Switch>\n      <Route path=\"/\" exact>\n        <HomeScreen fetchQuestions={fetchQuestions} />\n      </Route>\n      <Route path=\"/test\"  exact>\n        <QuestScreen \n         question={question} \n         score={score} \n         setScore={setScore} \n         setQuestion={setQuestion}/>\n      </Route>\n      <Route path=\"/result\" exact>\n        <Result score={score} \n        question={question} \n        setScore={setScore} \n        setQuestion={setQuestion}/>\n      </Route>\n      </Switch>\n    </main>\n    </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","export const API_URL = 'https://opentdb.com/api.php'","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}